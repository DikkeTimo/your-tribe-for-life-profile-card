// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type ProfilecardDocumentDataSlicesSlice = NamePfSlice;

/**
 * Content for profilecard documents
 */
interface ProfilecardDocumentData {
  /**
   * Slice Zone field in *profilecard*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: profilecard.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<ProfilecardDocumentDataSlicesSlice>
  /**
   * Meta Description field in *profilecard*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: profilecard.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *profilecard*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: profilecard.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;

  /**
   * Meta Title field in *profilecard*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: profilecard.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_title: prismic.KeyTextField;
}

/**
 * profilecard document from Prismic
 *
 * - **API ID**: `profilecard`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProfilecardDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ProfilecardDocumentData>,
    "profilecard",
    Lang
  >;

export type AllDocumentTypes = ProfilecardDocument;

/**
 * Primary content in *NamePf → Primary*
 */
export interface NamePfSliceDefaultPrimary {
  /**
   * Name field in *NamePf → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: name_pf.primary.name
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  name: prismic.RichTextField;

  /**
   * Timpf field in *NamePf → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: name_pf.primary.timpf
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  timpf: prismic.ImageField<never>;
}

/**
 * Default variation for NamePf Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NamePfSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<NamePfSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *NamePf*
 */
type NamePfSliceVariation = NamePfSliceDefault;

/**
 * NamePf Shared Slice
 *
 * - **API ID**: `name_pf`
 * - **Description**: NamePf
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NamePfSlice = prismic.SharedSlice<"name_pf", NamePfSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      ProfilecardDocument,
      ProfilecardDocumentData,
      ProfilecardDocumentDataSlicesSlice,
      AllDocumentTypes,
      NamePfSlice,
      NamePfSliceDefaultPrimary,
      NamePfSliceVariation,
      NamePfSliceDefault,
    };
  }
}
